---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import mpaViewTransitions from '../../assets/insights/mpa-view-transitions.png';
import defaultPlaceholder from '../../assets/insights/default-placeholder.jpg';
import blogPlaceholder2 from '../../assets/insights/blog-placeholder-2.jpg';
import blogPlaceholder3 from '../../assets/insights/blog-placeholder-3.jpg';
import blogPlaceholder4 from '../../assets/insights/blog-placeholder-4.jpg';
import blogPlaceholder5 from '../../assets/insights/blog-placeholder-5.jpg';
import blogPlaceholderAbout from '../../assets/insights/blog-placeholder-about.jpg';
import designCoverRaw from '../../assets/insights/design-cover-raw.jpg';

const posts = (await getCollection('insights')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const allTags = posts.flatMap(post => post.data.tags || []);
const uniqueTags = [...new Set(allTags)];

const heroImageMap = {
  '/assets/insights/mpa-view-transitions.png': mpaViewTransitions,
  '/assets/insights/default-placeholder.jpg': defaultPlaceholder,
  '/assets/insights/blog-placeholder-2.jpg': blogPlaceholder2,
  '/assets/insights/blog-placeholder-3.jpg': blogPlaceholder3,
  '/assets/insights/blog-placeholder-4.jpg': blogPlaceholder4,
  '/assets/insights/blog-placeholder-5.jpg': blogPlaceholder5,
  '/assets/insights/blog-placeholder-about.jpg': blogPlaceholderAbout,
  '/assets/insights/design-cover-raw.jpg': designCoverRaw,
};

const defaultImage = defaultPlaceholder;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`All Insights | ${SITE_TITLE}`} description="Browse all UX/UI, frontend, and design insights by Olha Kharlamova." />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img[data-image-component="true"] {
                aspect-ratio: 2 / 1;
                object-fit: cover;
                margin-bottom: 0.5rem;
                border-radius: 12px;
            }
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
            .tags {
                display: flex;
                flex-wrap: wrap;
                gap: 0.5rem;
                margin-top: 0.5rem;
            }
            .tag {
                display: inline-block;
                padding: 0.25rem 0.75rem;
                border-radius: 15px;
                background-color: var(--gray-light);
                color: var(--gray-dark);
                font-size: 0.8rem;
                text-decoration: none;
            }
            .tag:hover {
                background-color: var(--accent);
                color: white;
            }
            .all-tags {
                margin-top: 3rem;
                text-align: center;
            }
            .tags-container {
                display: flex;
                flex-wrap: wrap;
                gap: 0.5rem;
                justify-content: center;
                margin-top: 1rem;
            }
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
			/* Accessibility: ensure sufficient contrast on hover */
			ul li a:hover h4 { color: var(--ws-main-color); }
			ul li a:hover .date { color: rgb(var(--gray)); }
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						posts.map((post) => {
							const image = heroImageMap[post.data.heroImage] || defaultImage;
							const altText = `Cover image for: ${post.data.title}`;
							return (
								<li>
									<a href={`/insights/${post.id}/`}>
										{image ? (
											<Image src={image} alt={altText} width={720} height={360} style="width:100%;height:auto;border-radius:12px;box-shadow:var(--box-shadow);" />
										) : null}
										<h4 class="title">{post.data.title}</h4>
										<p class="date">
											<FormattedDate date={post.data.pubDate} />
										</p>
                                        <div class="tags">
                                            {post.data.tags?.map(tag => (
                                                <a href={`/tags/${tag}`} class="tag">{tag}</a>
                                            ))}
                                        </div>
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
            <section class="all-tags">
                <h2>All Tags</h2>
                <div class="tags-container">
                    {uniqueTags.map(tag => (
                        <a href={`/tags/${tag}`} class="tag">{tag}</a>
                    ))}
                </div>
            </section>
		</main>
		<Footer />
	</body>
</html>
